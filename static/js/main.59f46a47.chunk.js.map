{"version":3,"sources":["header/Header.js","constant/index.js","util/API.js","category/Category.js","sucess/Success.js","welcome/Welcome.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["Header","react_default","a","createElement","className","this","props","name","href","concat","phoneNumber","Component","API_BASE_URL","request","options","headers","Content-Type","localStorage","getItem","defaults","Object","assign","axios","Category","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleCategoryClick","value","readonly","lstSelectedCategory","state","currentCategory","includes","filteredItems","filter","item","setState","defineProperty","changeCurrentCategory","submitUserData","categoryIds","group","categories","forEach","category","length","push","apply","toConsumableArray","isSubmiting","privateLinkId","url","method","data","submitTalentOfUser","match","params","id","then","response","history","catch","error","alert","isLoadingPage","_this2","_this$props$match$par","groupName","selectedItemCategories","user","sort","b","position","message","getUserInfoFromPhoneNumber","_this3","icon","type","style","fontSize","_this$state","mainCategories","map","key","categoryId","onClick","toLowerCase","marginTop","display","toUpperCase","lstCategory","items","uuid","src_header_Header","description","Success","Welcome","handlerUserInput","phone","saveUserInfo","email","onInputFocus","height","onInputBlur","placeholder","onFocus","onBlur","ref","node","App","Switch","Route","path","component","exact","render","src_category_Category","withRouter","Boolean","window","location","hostname","ReactDOM","BrowserRouter","basename","process","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.59f46a47.chunk.js","sourcesContent":["\r\nimport React, { Component } from 'react';\r\nimport './Header.css'\r\nclass Header extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className='header-container'>\r\n                <div>{this.props.name}</div>\r\n                <div><a href={`tel:${this.props.phoneNumber}`} />{this.props.phoneNumber}</div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Header;","export const API_BASE_URL = 'https://fathomless-mountain-16793.herokuapp.com';\r\nexport const ACCESS_TOKEN = 'accessToken';","import axios from 'axios';\r\nimport { ACCESS_TOKEN } from '../constant';\r\nimport { API_BASE_URL } from './../constant/index';\r\nconst request = (options) => {\r\n    const headers = {\r\n        'Content-Type': 'application/json'\r\n    }\r\n\r\n    if (localStorage.getItem(ACCESS_TOKEN)) {\r\n        headers['Authorization'] = 'Bearer ' + localStorage.getItem(ACCESS_TOKEN)\r\n    }\r\n\r\n    const defaults = {headers: headers}\r\n    options = Object.assign({}, defaults, options)\r\n    return axios(options)\r\n}\r\n\r\nexport function getUserInfoFromPrivateLinkId(privateLinkId) {\r\n    return request({\r\n        url: API_BASE_URL + '/user/talent/' + privateLinkId,\r\n        method: 'GET'\r\n    })\r\n}\r\n\r\nexport function getUserInfoFromPhoneNumber(groupName, phoneNumber) {\r\n    return request({\r\n        url: API_BASE_URL + '/user/' + groupName + '/' + phoneNumber,\r\n        method: 'GET'\r\n    })\r\n}\r\n\r\nexport function submitTalentOfUser(categoryIds, privateLinkId) {\r\n    return request({\r\n        url: API_BASE_URL + '/user/talent/' + privateLinkId,\r\n        method: 'POST',\r\n        data: {\r\n            'categoryIds': categoryIds\r\n        }\r\n    })\r\n}","\r\nimport React, { Component } from 'react';\r\nimport './Category.css'\r\nimport axios from 'axios';\r\nimport { getUserInfoFromPrivateLinkId, submitTalentOfUser, getUserInfoFromPhoneNumber } from './../util/API';\r\nimport { Icon, message } from 'antd';\r\nimport Header from '../header/Header';\r\n\r\nclass Category extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            isSubmiting: false,\r\n            isLoadingPage: true\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        const { id, phoneNumber, groupName } = this.props.match.params\r\n\r\n        if (id) {\r\n            getUserInfoFromPrivateLinkId(id)\r\n            .then(response => {\r\n        \r\n                response.data.group.categories.forEach((category) => {\r\n                    this.setState({\r\n                        [category.name]: category.selectedItemCategories\r\n                    })\r\n                });\r\n\r\n                this.setState({\r\n                    group: response.data.group,\r\n                    user: response.data.user,\r\n                    isLoadingPage: false,\r\n                    currentCategory: response.data.group.categories.sort((a, b) => a.position - b.position)[0].name\r\n                })\r\n            }).catch(error => {\r\n                message.error(error.response.data.message)\r\n            })\r\n        } else if (phoneNumber && groupName) {\r\n            getUserInfoFromPhoneNumber(groupName, phoneNumber)\r\n            .then(response => {\r\n                response.data.group.categories.forEach((category) => {\r\n                    this.setState({\r\n                        [category.name]: category.selectedItemCategories\r\n                    })\r\n                });\r\n\r\n                this.setState({\r\n                    group: response.data.group,\r\n                    user: response.data.user,\r\n                    isLoadingPage: false,\r\n                    currentCategory: response.data.group.categories.sort((a, b) => a.position - b.position)[0].name\r\n                })\r\n            }).catch(error => {\r\n                message.error(error.response.data.message)\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    handleCategoryClick = (value) => {\r\n\r\n        if (this.props.readonly)\r\n            return;\r\n\r\n        const lstSelectedCategory = this.state[this.state.currentCategory];\r\n\r\n        if (!lstSelectedCategory.includes(value)) {\r\n            this.setState({\r\n                [this.state.currentCategory]: this.state[this.state.currentCategory].concat([value])\r\n            })\r\n        } else {\r\n            const filteredItems = lstSelectedCategory.filter(item => item !== value)\r\n            this.setState({\r\n                [this.state.currentCategory]: filteredItems\r\n            })\r\n        }\r\n    }\r\n\r\n    changeCurrentCategory = (value) => {\r\n        this.setState({\r\n            currentCategory: value\r\n        })\r\n    }\r\n\r\n    submitUserData = () => {\r\n       \r\n        let categoryIds = [];\r\n        this.state.group.categories.forEach((category => {\r\n            if (this.state[category.name] && this.state[category.name].length > 0) {\r\n                categoryIds.push(...this.state[category.name]);\r\n            }\r\n        }))\r\n\r\n        // let formData = {};\r\n        // formData['name'] = this.props.name;\r\n        // formData['phone'] = this.props.phone;\r\n        // formData['email'] = this.props.email;\r\n        \r\n        // formData['home'] = this.state.selectedHome.join(',');\r\n        // formData['car'] = this.state.selectedCar.join(',');\r\n        // formData['department'] = this.state.selectedDepartment.join(',');\r\n        // formData['industry'] = this.state.selectedIndustry.join(',');\r\n        // formData['art'] = this.state.selectedArt.join(',');\r\n        \r\n        // axios.get('https://script.google.com/macros/s/AKfycbwGu6hbQNJNJ6Qha90tu65pYl3_rEjvYwAXYkK3oHanPsn_mstf/exec',{\r\n        //     params: formData\r\n        // }) \r\n        this.setState({\r\n            isSubmiting: true\r\n        })\r\n        submitTalentOfUser(categoryIds, this.props.match.params.id)\r\n        .then(response => {\r\n            this.props.history.push(\"/success\")\r\n            this.setState({\r\n                isSubmiting: false\r\n            })\r\n        })\r\n        .catch(error => {\r\n            this.setState({\r\n                isSubmiting: false\r\n            })\r\n            alert('Something went wrong!')\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.isLoadingPage) {\r\n            return (\r\n                <div className='container'>\r\n                    <Icon className='loading' type=\"loading\" style={{fontSize: '80px'}}/>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        let { user, group } = this.state;\r\n\r\n        const mainCategories = group.categories.sort((a, b) => a.position - b.position).map((category) => {\r\n            return (\r\n                <div className='main-category-item' key={category.categoryId} onClick={ () => this.changeCurrentCategory(category.name)}>\r\n                    <div className={`category ${category.name.toLowerCase()}`}>\r\n                        {this.state[category.name].length > 0 ? (\r\n                            <span className='badge'>{this.state[category.name].length}</span>\r\n                        ) : ''}\r\n                        \r\n                    </div>\r\n                    <span style={{marginTop: 5, display: 'block'}}>{category.name.toUpperCase()}</span>\r\n                </div>\r\n            )\r\n        })\r\n\r\n        const lstSelectedCategory = this.state[this.state.currentCategory];\r\n        const lstCategory = group.categories.filter(category => category.name === this.state.currentCategory)[0]\r\n                                            .items.sort((a, b) => a.position - b.position).map((item) => {\r\n            return (\r\n                <div key={item.uuid} className='category-item-container' onClick= { () => this.handleCategoryClick(item.uuid)}>\r\n                    <div className={`category-item-icon category ${this.state.currentCategory}`}></div>\r\n                        <div className='category-item-desc'>\r\n                            {item.name}\r\n                        </div>\r\n                    <span className={lstSelectedCategory.includes(item.uuid) ? 'checked' : 'unchecked'}></span>\r\n                </div>\r\n            )\r\n        })\r\n        return (\r\n            <div className='container'>\r\n                <div className='category-container'>\r\n                    <div className={this.props.readonly ? 'height-footer' : 'height-ignore-footer'}>\r\n                        <Header name={user.name} phoneNumber={user.phoneNumber} />\r\n                        <div className='group'>\r\n                            <div className='title'>Group {this.state.group.name}</div>\r\n                            <div className='description'>{this.state.group.description}</div>\r\n                        </div>\r\n                        <div className='category-header'>\r\n                            <div className='main-category'>\r\n                                {mainCategories}\r\n                            </div>\r\n                        </div>\r\n                        <div className='category-list'>\r\n                            {lstCategory}\r\n                        </div>\r\n                    </div>\r\n                    {!this.props.readonly ? (\r\n                        <div className='submit-container'>\r\n                            <span>PARROQUIA DE SANTO TOMAS DE MORO</span>\r\n                            <button onClick={this.submitUserData} className='submit'>{this.state.isSubmiting ? 'Waiting...' : 'Salvar'}</button>\r\n                        </div>\r\n                    ) : ''}\r\n                    \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Category;","\r\nimport React, { Component } from 'react';\r\nimport './Success.css'\r\nclass Success extends Component {\r\n    \r\n    render() {\r\n        return (\r\n            <div className='success-container'>\r\n                <div className='main-success'>\r\n                    <div className='success'>Bienvenido !</div>\r\n                    <div className='success-note'>Gracias.</div>\r\n                </div>\r\n                <div className='bottom'>\r\n                    <div>Presione aquí para mandar la pagina de registro a otro miembro que necesita suscribirse.</div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Success;","\r\nimport React, { Component } from 'react';\r\nimport './Welcome.css'\r\nclass Welcome extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: '',\r\n            phone: '',\r\n            email: '',\r\n            height: '100vh'\r\n        }\r\n    }\r\n\r\n    handlerUserInput = () => {\r\n        if (this.name.value.length > 0 && this.phone.value.length > 0) {\r\n            this.props.saveUserInfo(this.name.value, this.phone.value, this.email.value);\r\n        }\r\n    }\r\n\r\n    onInputFocus = () => {\r\n        this.setState({\r\n            height: '100%'\r\n        })\r\n    }\r\n\r\n    onInputBlur = () => {\r\n        this.setState({\r\n            height: '100vh'\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='welcome-container' style={{height: this.state.height}}>\r\n                <div className='welcome-text'>\r\n                    <span className='hightligh'>Juntos haremos más.</span>\r\n                    El objetivo es hacer un directorio de nuestros talentos y en vez de pagar a un desconocido por algo que necesitemos le pagamos a alguien de confianza que pertenece a nuestra parroquia.\r\n                </div>\r\n                <div className='welcome-form'>\r\n                    <div>\r\n                        <input type='text' placeholder='Nombre' onFocus={this.onInputFocus} onBlur={this.onInputBlur} ref={(node) => {this.name = node}}/>\r\n                        <span className='require'>*</span>\r\n                    </div>\r\n                    <div>\r\n                        <input type='text' placeholder='Celular' onFocus={this.onInputFocus} onBlur={this.onInputBlur} ref={(node) => {this.phone = node}}/>\r\n                        <span className='require'>*</span>\r\n                    </div>\r\n                    <div> \r\n                        <input type='email' placeholder='Correo electrónico' onFocus={this.onInputFocus} onBlur={this.onInputBlur} ref={(node) => {this.email = node}}/>\r\n                    </div>\r\n                    <div style={{marginTop: 35}}>\r\n                        <button onClick={this.handlerUserInput} >Registrarme con Grupo Emaus</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Welcome;","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Header from './header/Header';\nimport Category from './category/Category';\nimport Success from './sucess/Success';\nimport Welcome from './welcome/Welcome';\nimport {\n  Route,\n  withRouter,\n  Redirect,\n  Switch\n} from 'react-router-dom';\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      phone: '',\n      email: ''\n    }\n  }\n\n  render() {\n    return (\n          <Switch>\n            <Route path='/success' component={Success} /> \n            <Route exact path=\"/talent/:id\"  render={(props) => <Category name={this.state.name} phone={this.state.phone} email={this.state.email} {...props} />}></Route>\n            <Route exact path=\"/:groupName/:phoneNumber\"  render={(props) => <Category name={this.state.name} readonly={true} phone={this.state.phone} email={this.state.email} {...props} />}></Route>\n            <Route exact path='/' component={Welcome} /> \n          </Switch>\n    );\n  }\n\n  saveUserInfo = (name, phone, email) => {\n    \n    this.setState({\n      name: name,\n      phone: phone,\n      email: email\n    })\n\n    this.props.history.push(\"/category\");\n    \n  } \n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\nReactDOM.render(\n    <Router basename={process.env.PUBLIC_URL}>\n        <App />\n    </Router>, \n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}